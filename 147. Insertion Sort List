/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertionSortList(ListNode* head) {
        ListNode* smallhead=NULL;
        while(head){
            ListNode* temp=head;
        head=head->next;
        temp->next=NULL;

        if(smallhead==NULL)
        smallhead=temp;

        else if(smallhead->val>=temp->val){
            temp->next=smallhead;
            smallhead=temp;
        }

        else{
            ListNode* root=smallhead;
            while(root->next){
                if(temp->val > root->val && temp->val <= root->next->val){
                    temp->next=root->next;
                    root->next=temp;
                    break;
                }
                root=root->next;
            }
            if(root->next==NULL)
            root->next=temp;
        }
        }
        return smallhead;
    }
};
