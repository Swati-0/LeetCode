/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>ans;
    void inorder(TreeNode* root){
        if(root==NULL)
        return;
        inorder(root->left);
        ans.push_back(root->val);
        inorder(root->right);
    }

    TreeNode* BST(int l, int h){
        if(l>h)
        return NULL;

        int mid=(l+h)/2;
        TreeNode* node=new TreeNode(ans[mid]);
        node->left=BST(l,mid-1);
        node->right=BST(mid+1, h);
        return node;
    }

    TreeNode* balanceBST(TreeNode* root) {
        if(root==NULL)
        return NULL;
        inorder(root);
        return (BST(0, ans.size()-1));
    }
};
