class Solution {
public:
    vector<int> pivotArray(vector<int>& nums, int pivot) {
        int n=nums.size();
        vector<int> smaller;
        vector<int> same;
        vector<int> bigger;
        for(int i=0; i<n; i++){
            if(nums[i]<pivot){
                smaller.push_back(nums[i]);
            }else if(nums[i]>pivot){
                bigger.push_back(nums[i]);
            }else{
                same.push_back(nums[i]);
            }
        }
        vector<int> answer;
        int m=smaller.size();
        int s=bigger.size();
        int x=same.size();
        for(int i=0; i<m; i++){
            answer.push_back(smaller[i]);
        }
        for(int i=0; i<x; i++){
            answer.push_back(same[i]);
        }
        for(int i=0; i<s; i++){
            answer.push_back(bigger[i]);
        }
        return answer;
    }
};2161. Partition Array According to Given Pivot
