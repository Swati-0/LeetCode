class Solution {
public:
    void dfs(int open,int close, string s, int n, vector<string>& result){
        if(open==close && open+close==2*n){
            result.push_back(s);
            return;
        }
        if(open<n){
            dfs(open+1, close, s+"(", n, result);
        }
        if(close<open){
            dfs(open, close+1, s+")", n, result);
        }
    }
    vector<string> generateParenthesis(int n) {
        vector<string> result;
        dfs(0,0,"",n,result);
        return result;
    }
};
