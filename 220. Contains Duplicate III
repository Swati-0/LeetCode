class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int indexDiff, int valueDiff) {
        multiset<long> window; // Use long to avoid overflow

        for (int i = 0; i < nums.size(); ++i) {
            // Keep window size <= indexDiff
            if (i > indexDiff) {
                window.erase(window.find(nums[i - indexDiff - 1]));
            }

            // Find the smallest number >= nums[i] - valueDiff
            auto it = window.lower_bound((long)nums[i] - valueDiff);

            // Check if this number is within valueDiff of nums[i]
            if (it != window.end() && abs(*it - nums[i]) <= valueDiff) {
                return true;
            }

            // Insert current number into the window
            window.insert(nums[i]);
        }

        return false;
    }
};
