/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pos=0;
    TreeNode* preorder(string &s, int depth){
        int n=s.size();
        int d=0;
        while(pos<n && s[pos]=='-'){
            d++;
            pos++;
        }
        if(d!=depth){
            pos=pos-d;
            return NULL;
        }
        int val=0;
        while(pos<n && isdigit(s[pos])){
            val=val*10+(s[pos]-'0');
            pos++;
        }

        TreeNode* node=new TreeNode(val);
        node->left=preorder(s, depth+1);
        node->right=preorder(s, depth+1);
        return node;
    }

    TreeNode* recoverFromPreorder(string traversal) {
        return preorder(traversal,0);
        
    }
};
