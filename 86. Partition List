/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* smallerhead=nullptr;
        ListNode* biggerhead=nullptr;
        ListNode* smallertail=nullptr;
        ListNode* biggertail=nullptr;

        while(head){
            if(head->val<x){
                if(!smallerhead){
                    smallerhead=head;
                    smallertail=head;
                }else{
                    smallertail->next=head;
                    smallertail=head;
                }
            }else{
                if(!biggerhead){
                    biggerhead=head;
                    biggertail=head;
                }else{
                    biggertail->next=head;
                    biggertail=head;
                }
            }
            head=head->next;
        }

        if(!smallerhead)
        return biggerhead;

        if(biggertail)
        biggertail->next=nullptr;

        smallertail->next=biggerhead;
        return smallerhead;
    }
};
