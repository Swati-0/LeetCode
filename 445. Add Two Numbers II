/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1==NULL && l2!=NULL)
        return l2;
        if(l2==NULL && l1!=NULL)
        return l1;
        if(l1==NULL && l2==NULL)
        return NULL;
        stack<int> s1;
        stack<int> s2;
       // stack<int>s;
        while(l1!=NULL){
            s1.push(l1->val);
            l1=l1->next;
        }
        while(l2!=NULL){
            s2.push(l2->val);
            l2=l2->next;
        }
        ListNode* result=NULL;
        int carry=0;
        int sum;
        while(!s1.empty() || !s2.empty() || carry!=0){
           sum=carry;
           if(!s1.empty()){
            sum+=s1.top();
            s1.pop();
           }
           if(!s2.empty()){
            sum+=s2.top();
            s2.pop();
           }
           carry=sum/10;
           sum=sum%10;

           ListNode* head=new ListNode(sum);
            head->next=result;
            result=head;
        }
        
        return result;
    }
};
