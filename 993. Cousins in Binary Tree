/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

void parent(TreeNode* root,TreeNode* &temp, int x, int &idx,int count){
    if(root==NULL)
        return;

    if((root->left!=NULL && root->left->val==x) || (root->right!=NULL && root->right->val==x)){
    temp= root;
    idx=count;
    }

    parent(root->left,temp,x,idx,count+1);
    parent(root->right,temp,x,idx,count+1); 
}
    bool isCousins(TreeNode* root, int x, int y) {
        int id1=0;
        int id2=0;
        if(root->val==x || root->val==y)
        return false;
        TreeNode* temp1=nullptr;
        parent(root,temp1,x,id1,0);

        TreeNode* temp2=nullptr;
        parent(root,temp2,y,id2,0);

        if(temp1!=temp2 && id1==id2)
        return true;

        return false;
    }
};
