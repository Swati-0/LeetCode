class Solution {
public:
    void dfs(int node, int target, vector<vector<int>>& graph, vector<int> &path, vector<vector<int>> &ans){
        path.push_back(node);
        if(node==target){
            ans.push_back(path);
            path.pop_back();
            return;
        }
        for(auto it: graph[node]){
            dfs(it, target, graph, path, ans);
        }
        path.pop_back();
    }
    
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        vector<vector<int>>ans;
        vector<int> path;
        int n=graph.size();
        dfs(0, n-1, graph, path, ans);
        return ans;
    }
};
